{"version":3,"sources":["components/TableBody/TableBody.jsx","sortIcons.js","sortFields.js","components/TableHeader/TableHeader.jsx","components/Table/Table.jsx","components/FilterNavigation/FilterNavigation.jsx","api/users.js","api/categories.js","api/products.js","App.jsx","index.jsx"],"names":["TableBody","products","map","product","category","user","personClassNames","classNames","sex","className","id","name","icon","title","sortIcons","sortFields","TableHeader","props","changeSortOrder","changeSortField","useState","sortId","setSortId","sortProduct","setSortProduct","sortCategory","setSortCategory","sortUser","setSortUser","toggleSortOrder","newSortOrder","changeCurrentOrder","handleChangeSortOrder","newSortField","href","onClick","Table","FilterNavigation","users","categories","selectedUser","changeUser","productName","changeProductName","selectedCategories","changeCategories","type","placeholder","value","onChange","event","target","length","includes","categoryTitle","prevCategories","filter","ownerId","categoryId","sortDataByTypes","firstValue","secondValue","localeCompare","sortData","data","order","field","sort","a","b","getPreparedProducts","filterOptions","selectedProductName","sortField","sortOrder","productsFromServer","useId","categoriesFromServer","find","usersFromServer","preparedProducts","lowerProductName","toLowerCase","App","setSelectedUser","setSelectedProductName","setSelectedCategories","setSortField","setSortOrder","ReactDOM","render","document","getElementById"],"mappings":"8QAGaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,gCACGA,EAASC,KAAI,SAACC,GACb,IAAQC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAEZC,EAAmBC,IAAW,CAClC,gBAA8B,MAAbF,EAAKG,IACtB,kBAAgC,MAAbH,EAAKG,MAG1B,OACE,qBAAI,UAAQ,UAAZ,UACE,oBAAIC,UAAU,uBAAuB,UAAQ,YAA7C,SACGN,EAAQO,KAGX,oBAAI,UAAQ,cAAZ,SAA2BP,EAAQQ,OACnC,oBAAI,UAAQ,kBAAZ,mBAAkCP,EAASQ,KAA3C,cAAqDR,EAASS,SAE9D,oBAAI,UAAQ,cAAcJ,UAAWH,EAArC,SACGD,EAAKM,SATiBR,EAAQO,GAatC,KAxBoB,ECHZI,EACF,cADEA,EAEF,iBAFEA,EAGA,mBCHAC,EACF,GADEA,EAEP,KAFOA,EAGF,UAHEA,EAID,WAJCA,EAKL,OCDKC,EAAc,SAACC,GAC1B,IAAQC,EAAqCD,EAArCC,gBAAiBC,EAAoBF,EAApBE,gBAEzB,EAA4BC,mBAASN,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAASN,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAASN,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAASN,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEMC,EAAkB,SAACC,EAAcC,GACrC,OAAQD,GACN,KAAKhB,EACHiB,EAAmBjB,GACnBI,EAAgBJ,GAChB,MAEF,KAAKA,EACHiB,EAAmBjB,GACnBI,EAAgBJ,GAChB,MAOF,QACEiB,EAAmBjB,GACnBI,EAAgBJ,GAGrB,EAEKkB,EAAwB,SAACC,GAC7B,OAAQA,GACN,KAAKlB,EACHc,EAAgBR,EAAQC,GACxB,MAEF,KAAKP,EACHc,EAAgBN,EAAaC,GAC7B,MAEF,KAAKT,EACHc,EAAgBJ,EAAcC,GAC9B,MAEF,KAAKX,EACHc,EAAgBF,EAAUC,GAO9BT,EAAgBc,EACjB,EAED,OACE,gCACE,+BACE,6BACE,uBAAMxB,UAAU,8BAAhB,eAEE,mBAAGyB,KAAK,KAAKC,QAAS,kBAAMH,EAAsBjB,EAA5B,EAAtB,SACE,sBAAMN,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAWY,aAMzC,6BACE,uBAAMZ,UAAU,8BAAhB,oBAEE,mBACEyB,KAAK,KACLC,QAAS,kBAAMH,EAAsBjB,EAA5B,EAFX,SAIE,sBAAMN,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAWc,aAMzC,6BACE,uBAAMd,UAAU,8BAAhB,qBAEE,mBACEyB,KAAK,KACLC,QAAS,kBAAMH,EAAsBjB,EAA5B,EAFX,SAIE,sBAAMN,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAWgB,aAMzC,6BACE,uBAAMhB,UAAU,8BAAhB,iBAEE,mBAAGyB,KAAK,KAAKC,QAAS,kBAAMH,EAAsBjB,EAA5B,EAAtB,SACE,sBAAMN,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAWkB,iBAQhD,ECjHYS,EAAQ,SAACnB,GACpB,IACEhB,EAGEgB,EAHFhB,SACAkB,EAEEF,EAFFE,gBACAD,EACED,EADFC,gBAGF,OACE,wBACE,UAAQ,eACRT,UAAU,0CAFZ,UAIE,cAAC,EAAD,CACES,gBAAiBA,EACjBC,gBAAiBA,IAGnB,cAAC,EAAD,CAAWlB,SAAUA,MAG1B,ECpBYoC,EAAmB,SAACpB,GAC/B,IACEqB,EAQErB,EARFqB,MACAC,EAOEtB,EAPFsB,WACAC,EAMEvB,EANFuB,aACAC,EAKExB,EALFwB,WACAC,EAIEzB,EAJFyB,YACAC,EAGE1B,EAHF0B,kBACAC,EAEE3B,EAFF2B,mBACAC,EACE5B,EADF4B,iBAsBF,OACE,qBAAKpC,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,kCAAb,UACE,mBACE,UAAQ,iBACRyB,KAAK,KACLzB,UAAWF,IAAW,CACpB,aAAciC,IAEhBL,QAAS,kBAAMM,EAAW,KAAjB,EANX,iBAWCH,EAAMpC,KAAI,SAAAG,GAAI,OACb,mBAEE,UAAQ,iBACR6B,KAAK,KACLzB,UAAWF,IAAW,CACpB,YAAaF,EAAKK,MAAL,OAAY8B,QAAZ,IAAYA,OAAZ,EAAYA,EAAc9B,MAEzCyB,QAAS,kBAAMM,EAAWpC,EAAjB,EAPX,SASGA,EAAKM,MARDN,EAAKK,GAFC,OAejB,qBAAKD,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRqC,KAAK,OACLrC,UAAU,QACVsC,YAAY,SACZC,MAAON,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAAkBO,EAAMC,OAAOH,MAAnC,IAGjB,sBAAMvC,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,WAG3C,sBAAMA,UAAU,gBAAhB,SAEE,wBACE,UAAQ,cACRqC,KAAK,SACLrC,UAAU,SACV0B,QAAS,kBAAMQ,EAAkB,GAAxB,WAMjB,sBAAKlC,UAAU,gCAAf,UACE,mBACEyB,KAAK,KACL,UAAQ,gBACRzB,UAAWF,IAAW,SAAU,aAAc,OAAQ,CACpD,cAAeqC,EAAmBQ,OAAS,IAE7CjB,QAAS,kBAAMU,EAAiB,GAAvB,EANX,iBAWCN,EAAWrC,KAAI,SAAAE,GAAQ,OACtB,mBAEE,UAAQ,WACRK,UAAWF,IAAW,SAAU,OAAQ,OAAQ,CAC9C,UAAWqC,EAAmBS,SAASjD,EAASS,SAElDqB,KAAK,KACLC,QAAS,kBA5FSmB,EA4FkBlD,EAASS,WA3FvDgC,GAAiB,SAACU,GAChB,OAAIA,EAAeF,SAASC,GACnBC,EAAeC,QAAO,SAAApD,GAAQ,OAAIA,IAAakD,CAAjB,IAGjC,GAAN,mBACKC,GADL,CAEED,GAEH,IAV0B,IAACA,CA4FT,EAPX,SASGlD,EAASS,OARLT,EAASM,GAFM,OAe1B,qBAAKD,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRyB,KAAK,KACLzB,UAAU,0CACV0B,QA9GoB,WAC5BM,EAAW,MACXE,EAAkB,IAClBE,EAAiB,GAClB,EAsGO,qCAYT,ECrIc,GACb,CAAEnC,GAAI,EAAGC,KAAM,OAAQH,IAAK,KAC5B,CAAEE,GAAI,EAAGC,KAAM,OAAQH,IAAK,KAC5B,CAAEE,GAAI,EAAGC,KAAM,MAAOH,IAAK,KAC3B,CAAEE,GAAI,EAAGC,KAAM,OAAQH,IAAK,MCJf,GACb,CACEE,GAAI,EACJG,MAAO,UACPD,KAAM,eACN6C,QAAS,GAEX,CACE/C,GAAI,EACJG,MAAO,SACPD,KAAM,eACN6C,QAAS,GAEX,CACE/C,GAAI,EACJG,MAAO,SACPD,KAAM,eACN6C,QAAS,GAEX,CACE/C,GAAI,EACJG,MAAO,cACPD,KAAM,eACN6C,QAAS,GAEX,CACE/C,GAAI,EACJG,MAAO,UACPD,KAAM,eACN6C,QAAS,IC7BE,GACb,CACE/C,GAAI,EACJC,KAAM,OACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,QACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,OACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,SACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,QACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,SACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,OACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,QACN+C,WAAY,GAEd,CACEhD,GAAI,EACJC,KAAM,SACN+C,WAAY,ICzBVC,G,MAAkB,SAACb,EAAMc,EAAYC,GACzC,MAAa,WAATf,EACKc,EAAaC,EAGT,WAATf,EACKc,EAAWE,cAAcD,GAG3B,CACR,GAEKE,EAAW,SAACC,EAAMC,EAAOC,GAC7BF,EAAKG,MAAK,SAACC,EAAGC,GACZ,OAAIJ,IAAUnD,EACL6C,SAAuBS,EAAEF,GAAQE,EAAEF,GAAQG,EAAEH,IAGlDD,IAAUnD,EACL6C,SAAuBS,EAAEF,GAAQG,EAAEH,GAAQE,EAAEF,IAG/C,CACR,GACF,EAEKI,EAAsB,SAACC,GAC3B,IACE/B,EAKE+B,EALF/B,aACAgC,EAIED,EAJFC,oBACA5B,EAGE2B,EAHF3B,mBACA6B,EAEEF,EAFFE,UACAC,EACEH,EADFG,UAGIzE,EAAW0E,EAAmBzE,KAAI,SAACC,GACvC,IA5CoBuD,EAIJkB,EAwCVxE,GA5CcsD,EA4CavD,EAAQuD,WA3C3CmB,EAAqBC,MAAK,SAAA1E,GAAQ,OAAIA,EAASM,KAAOgD,CAApB,KAAmC,MA4C7DrD,GAzCUuE,EAyCSxE,EAASqD,QAxCpCsB,EAAgBD,MAAK,SAAAzE,GAAI,OAAIA,EAAKK,KAAOkE,CAAhB,KAA0B,MA0CjD,OAAO,2BACFzE,GADL,IAEEC,WACAC,QAEH,IAEG2E,EAAgB,YAAO/E,GAQ3B,GANIuC,IACFwC,EAAmBA,EAAiBxB,QAAO,SAAArD,GAAO,OAChDA,EAAQE,KAAKK,KAAO8B,EAAa9B,EADe,KAKhD8D,EAAqB,CACvB,IAAMS,EAAmBT,EAAoBU,cAE7CF,EAAmBA,EAAiBxB,QAAO,SAAArD,GAAO,OAChDA,EAAQQ,KAAKuE,cAAc7B,SAAS4B,EADY,GAGnD,CAUD,GARIrC,EAAmBQ,OAAS,IAC9B4B,EAAmBA,EAAiBxB,QAAO,SAACrD,GAC1C,IAAQC,EAAaD,EAAbC,SAER,OAAOwC,EAAmBS,SAASjD,EAASS,MAC7C,KAGC4D,EACF,OAAQA,GACN,KAAK1D,EACHgD,EAASiB,EAAkBN,EAAW3D,GACtC,MAEF,KAAKA,EACHgD,EAASiB,EAAkBN,EAAW,QACtC,MAEF,KAAK3D,EACHiE,EAAiBb,MAAK,SAACC,EAAGC,GACxB,OAAIK,IAAc5D,EACT6C,SACES,EAAEhE,SAASS,MAAOuD,EAAEhE,SAASS,MAAOwD,EAAEjE,SAASS,OAItD6D,IAAc5D,EACT6C,SACES,EAAEhE,SAASS,MAAOwD,EAAEjE,SAASS,MAAOuD,EAAEhE,SAASS,OAInD,CACR,IACD,MAEF,KAAKE,EACHiE,EAAiBb,MAAK,SAACC,EAAGC,GACxB,OAAIK,IAAc5D,EACT6C,SACES,EAAE/D,KAAKM,KAAMyD,EAAE/D,KAAKM,KAAM0D,EAAEhE,KAAKM,MAIxC+D,IAAc5D,EACT6C,SACES,EAAE/D,KAAKM,KAAM0D,EAAEhE,KAAKM,KAAMyD,EAAE/D,KAAKM,MAIrC,CACR,IAQP,OAAOqE,CACR,EAEYG,EAAM,WACjB,MAAwC/D,mBAAS,MAAjD,mBAAOoB,EAAP,KAAqB4C,EAArB,KACA,EAAsDhE,mBAAS,IAA/D,mBAAOoD,EAAP,KAA4Ba,EAA5B,KACA,EAAoDjE,mBAAS,IAA7D,mBAAOwB,EAAP,KAA2B0C,EAA3B,KACA,EAAkClE,mBAASL,GAA3C,mBAAO0D,EAAP,KAAkBc,EAAlB,KACA,EAAkCnE,mBAASN,GAA3C,mBAAO4D,EAAP,KAAkBc,EAAlB,KAEMR,EAAmBV,EAAoB,CAC3C9B,eACAgC,sBACA5B,qBACA6B,YACAC,cAGF,OACE,qBAAKjE,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,cAAC,EAAD,CACE6B,MAAOyC,EACPxC,WAAYsC,EACZrC,aAAcA,EACdC,WAAY2C,EACZ1C,YAAa8B,EACb7B,kBAAmB0C,EACnBzC,mBAAoBA,EACpBC,iBAAkByC,IAGpB,qBAAK7E,UAAU,sBAAf,SACGuE,EAAiB5B,OAAS,EACzB,cAAC,EAAD,CACEnD,SAAU+E,EACV7D,gBAAiBoE,EACjBrE,gBAAiBsE,IAGnB,mBAAG,UAAQ,oBAAX,0DAQX,ECtLDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.4f2d2b6d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport const TableBody = ({ products }) => (\n  <tbody>\n    {products.map((product) => {\n      const { category, user } = product;\n\n      const personClassNames = classNames({\n        'has-text-link': user.sex === 'm',\n        'has-text-danger': user.sex === 'f',\n      });\n\n      return (\n        <tr data-cy=\"Product\" key={product.id}>\n          <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n            {product.id}\n          </td>\n\n          <td data-cy=\"ProductName\">{product.name}</td>\n          <td data-cy=\"ProductCategory\">{`${category.icon} - ${category.title}`}</td>\n\n          <td data-cy=\"ProductUser\" className={personClassNames}>\n            {user.name}\n          </td>\n        </tr>\n      );\n    })}\n  </tbody>\n);\n","export const sortIcons = {\n  DEFAULT: 'fas fa-sort',\n  SORT_UP: 'fas fa-sort-up',\n  SORT_DOWN: 'fas fa-sort-down',\n};\n","export const sortFields = {\n  DEFAULT: '',\n  ID: 'id',\n  PRODUCT: 'product',\n  CATEGORY: 'category',\n  USER: 'user',\n};\n","import { useState } from 'react';\nimport { sortIcons } from '../../sortIcons';\nimport { sortFields } from '../../sortFields';\n\nexport const TableHeader = (props) => {\n  const { changeSortOrder, changeSortField } = props;\n\n  const [sortId, setSortId] = useState(sortIcons.DEFAULT);\n  const [sortProduct, setSortProduct] = useState(sortIcons.DEFAULT);\n  const [sortCategory, setSortCategory] = useState(sortIcons.DEFAULT);\n  const [sortUser, setSortUser] = useState(sortIcons.DEFAULT);\n\n  const toggleSortOrder = (newSortOrder, changeCurrentOrder) => {\n    switch (newSortOrder) {\n      case sortIcons.DEFAULT:\n        changeCurrentOrder(sortIcons.SORT_UP);\n        changeSortOrder(sortIcons.SORT_UP);\n        break;\n\n      case sortIcons.SORT_UP:\n        changeCurrentOrder(sortIcons.SORT_DOWN);\n        changeSortOrder(sortIcons.SORT_DOWN);\n        break;\n\n      case sortIcons.SORT_DOWN:\n        changeCurrentOrder(sortIcons.DEFAULT);\n        changeSortOrder(sortIcons.DEFAULT);\n        break;\n\n      default:\n        changeCurrentOrder(sortIcons.DEFAULT);\n        changeSortOrder(sortIcons.DEFAULT);\n        break;\n    }\n  };\n\n  const handleChangeSortOrder = (newSortField) => {\n    switch (newSortField) {\n      case sortFields.ID:\n        toggleSortOrder(sortId, setSortId);\n        break;\n\n      case sortFields.PRODUCT:\n        toggleSortOrder(sortProduct, setSortProduct);\n        break;\n\n      case sortFields.CATEGORY:\n        toggleSortOrder(sortCategory, setSortCategory);\n        break;\n\n      case sortFields.USER:\n        toggleSortOrder(sortUser, setSortUser);\n        break;\n\n      default:\n        break;\n    }\n\n    changeSortField(newSortField);\n  };\n\n  return (\n    <thead>\n      <tr>\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            ID\n            <a href=\"#/\" onClick={() => handleChangeSortOrder(sortFields.ID)}>\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className={sortId} />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            Product\n            <a\n              href=\"#/\"\n              onClick={() => handleChangeSortOrder(sortFields.PRODUCT)}\n            >\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className={sortProduct} />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            Category\n            <a\n              href=\"#/\"\n              onClick={() => handleChangeSortOrder(sortFields.CATEGORY)}\n            >\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className={sortCategory} />\n              </span>\n            </a>\n          </span>\n        </th>\n\n        <th>\n          <span className=\"is-flex is-flex-wrap-nowrap\">\n            User\n            <a href=\"#/\" onClick={() => handleChangeSortOrder(sortFields.USER)}>\n              <span className=\"icon\">\n                <i data-cy=\"SortIcon\" className={sortUser} />\n              </span>\n            </a>\n          </span>\n        </th>\n      </tr>\n    </thead>\n  );\n};\n","import { TableBody } from '../TableBody';\nimport { TableHeader } from '../TableHeader/TableHeader';\n\nexport const Table = (props) => {\n  const {\n    products,\n    changeSortField,\n    changeSortOrder,\n  } = props;\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <TableHeader\n        changeSortOrder={changeSortOrder}\n        changeSortField={changeSortField}\n      />\n\n      <TableBody products={products} />\n    </table>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\nexport const FilterNavigation = (props) => {\n  const {\n    users,\n    categories,\n    selectedUser,\n    changeUser,\n    productName,\n    changeProductName,\n    selectedCategories,\n    changeCategories,\n  } = props;\n\n  const handleResetAllFilters = () => {\n    changeUser(null);\n    changeProductName('');\n    changeCategories([]);\n  };\n\n  const handleToggleCategory = (categoryTitle) => {\n    changeCategories((prevCategories) => {\n      if (prevCategories.includes(categoryTitle)) {\n        return prevCategories.filter(category => category !== categoryTitle);\n      }\n\n      return [\n        ...prevCategories,\n        categoryTitle,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"block\">\n      <nav className=\"panel\">\n        <p className=\"panel-heading\">Filters</p>\n\n        <p className=\"panel-tabs has-text-weight-bold\">\n          <a\n            data-cy=\"FilterAllUsers\"\n            href=\"#/\"\n            className={classNames({\n              'is-active': !selectedUser,\n            })}\n            onClick={() => changeUser(null)}\n          >\n            All\n          </a>\n\n          {users.map(user => (\n            <a\n              key={user.id}\n              data-cy=\"FilterAllUsers\"\n              href=\"#/\"\n              className={classNames({\n                'is-active': user.id === selectedUser?.id,\n              })}\n              onClick={() => changeUser(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </p>\n\n        <div className=\"panel-block\">\n          <p className=\"control has-icons-left has-icons-right\">\n            <input\n              data-cy=\"SearchField\"\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Search\"\n              value={productName}\n              onChange={event => changeProductName(event.target.value)}\n            />\n\n            <span className=\"icon is-left\">\n              <i className=\"fas fa-search\" aria-hidden=\"true\" />\n            </span>\n\n            <span className=\"icon is-right\">\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => changeProductName('')}\n              />\n            </span>\n          </p>\n        </div>\n\n        <div className=\"panel-block is-flex-wrap-wrap\">\n          <a\n            href=\"#/\"\n            data-cy=\"AllCategories\"\n            className={classNames('button', 'is-success', 'mr-6', {\n              'is-outlined': selectedCategories.length > 0,\n            })}\n            onClick={() => changeCategories([])}\n          >\n            All\n          </a>\n\n          {categories.map(category => (\n            <a\n              key={category.id}\n              data-cy=\"Category\"\n              className={classNames('button', 'mr-2', 'my-1', {\n                'is-info': selectedCategories.includes(category.title),\n              })}\n              href=\"#/\"\n              onClick={() => handleToggleCategory(category.title)}\n            >\n              {category.title}\n            </a>\n          ))}\n        </div>\n\n        <div className=\"panel-block\">\n          <a\n            data-cy=\"ResetAllButton\"\n            href=\"#/\"\n            className=\"button is-link is-outlined is-fullwidth\"\n            onClick={handleResetAllFilters}\n          >\n            Reset all filters\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import { useState } from 'react';\nimport { Table } from './components/Table';\nimport { FilterNavigation } from './components/FilterNavigation';\nimport { sortIcons } from './sortIcons';\nimport { sortFields } from './sortFields';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\nimport './App.scss';\n\nconst getCategoryById = categoryId => (\n  categoriesFromServer.find(category => category.id === categoryId) || null\n);\n\nconst getUserById = useId => (\n  usersFromServer.find(user => user.id === useId) || null\n);\n\nconst sortDataByTypes = (type, firstValue, secondValue) => {\n  if (type === 'number') {\n    return firstValue - secondValue;\n  }\n\n  if (type === 'string') {\n    return firstValue.localeCompare(secondValue);\n  }\n\n  return 0;\n};\n\nconst sortData = (data, order, field) => {\n  data.sort((a, b) => {\n    if (order === sortIcons.SORT_UP) {\n      return sortDataByTypes(typeof a[field], a[field], b[field]);\n    }\n\n    if (order === sortIcons.SORT_DOWN) {\n      return sortDataByTypes(typeof a[field], b[field], a[field]);\n    }\n\n    return 0;\n  });\n};\n\nconst getPreparedProducts = (filterOptions) => {\n  const {\n    selectedUser,\n    selectedProductName,\n    selectedCategories,\n    sortField,\n    sortOrder,\n  } = filterOptions;\n\n  const products = productsFromServer.map((product) => {\n    const category = getCategoryById(product.categoryId);\n    const user = getUserById(category.ownerId);\n\n    return {\n      ...product,\n      category,\n      user,\n    };\n  });\n\n  let preparedProducts = [...products];\n\n  if (selectedUser) {\n    preparedProducts = preparedProducts.filter(product => (\n      product.user.id === selectedUser.id\n    ));\n  }\n\n  if (selectedProductName) {\n    const lowerProductName = selectedProductName.toLowerCase();\n\n    preparedProducts = preparedProducts.filter(product => (\n      product.name.toLowerCase().includes(lowerProductName)\n    ));\n  }\n\n  if (selectedCategories.length > 0) {\n    preparedProducts = preparedProducts.filter((product) => {\n      const { category } = product;\n\n      return selectedCategories.includes(category.title);\n    });\n  }\n\n  if (sortField) {\n    switch (sortField) {\n      case sortFields.ID:\n        sortData(preparedProducts, sortOrder, sortFields.ID);\n        break;\n\n      case sortFields.PRODUCT:\n        sortData(preparedProducts, sortOrder, 'name');\n        break;\n\n      case sortFields.CATEGORY:\n        preparedProducts.sort((a, b) => {\n          if (sortOrder === sortIcons.SORT_UP) {\n            return sortDataByTypes(\n              typeof a.category.title, a.category.title, b.category.title,\n            );\n          }\n\n          if (sortOrder === sortIcons.SORT_DOWN) {\n            return sortDataByTypes(\n              typeof a.category.title, b.category.title, a.category.title,\n            );\n          }\n\n          return 0;\n        });\n        break;\n\n      case sortFields.USER:\n        preparedProducts.sort((a, b) => {\n          if (sortOrder === sortIcons.SORT_UP) {\n            return sortDataByTypes(\n              typeof a.user.name, a.user.name, b.user.name,\n            );\n          }\n\n          if (sortOrder === sortIcons.SORT_DOWN) {\n            return sortDataByTypes(\n              typeof a.user.name, b.user.name, a.user.name,\n            );\n          }\n\n          return 0;\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return preparedProducts;\n};\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedProductName, setSelectedProductName] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [sortField, setSortField] = useState(sortFields.DEFAULT);\n  const [sortOrder, setSortOrder] = useState(sortIcons.DEFAULT);\n\n  const preparedProducts = getPreparedProducts({\n    selectedUser,\n    selectedProductName,\n    selectedCategories,\n    sortField,\n    sortOrder,\n  });\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <FilterNavigation\n          users={usersFromServer}\n          categories={categoriesFromServer}\n          selectedUser={selectedUser}\n          changeUser={setSelectedUser}\n          productName={selectedProductName}\n          changeProductName={setSelectedProductName}\n          selectedCategories={selectedCategories}\n          changeCategories={setSelectedCategories}\n        />\n\n        <div className=\"box table-container\">\n          {preparedProducts.length > 0 ? (\n            <Table\n              products={preparedProducts}\n              changeSortField={setSortField}\n              changeSortOrder={setSortOrder}\n            />\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}